name: üì¶ Build Backend and Push to Google Cloud

on:
  workflow_call:
    inputs:
      checkout_repo:
        required: false
        type: string
      checkout_ref:
        required: false
        type: string
      env:
        required: false
        type: string
        description: "Environment to setup for"
        default: dev
      version:
        required: false
        type: string
        description: "The semantic version to be released"
  workflow_dispatch:
    inputs:
      env:
        description: "Environment override (prod|dev)"
        required: false
        type: choice
        options:
          - dev
          - prod

permissions:
  id-token: write # This is required for requesting the JWT
  contents: write # This is required for actions/checkout

concurrency:
  group: backend-build-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate:
    name: Validate backend for ${{ (github.event_name == 'workflow_call' || github.event_name == 'workflow_dispatch') && inputs.env || (github.ref_name == 'main' && 'prod' || 'dev') }}
    uses: ./.github/workflows/backend-validate.yaml
    with:
      env: ${{ inputs.env }}
      checkout_repo: ${{ inputs.checkout_repo }}
      checkout_ref: ${{ inputs.checkout_ref }}
  build:
    name: Build backend for ${{ (github.event_name == 'workflow_call' || github.event_name == 'workflow_dispatch') && inputs.env || (github.ref_name == 'main' && 'prod' || 'dev') }}
    needs:
      - validate
    runs-on: ubuntu-latest
    environment: ${{ inputs.env }}
    steps:
      - name: ‚¨áÔ∏è Checkout repository
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.checkout_repo }}
          ref: ${{ inputs.checkout_ref }}
          fetch-depth: 0

      - name: üì¶ Setup Workflow
        uses: ./.github/actions/setup
        with:
          WIF_PROVIDER: ${{ vars.WIF_PROVIDER }}
          WIF_SA: ${{ vars.WIF_SA }}

      - name: üß™ Install Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: üîó Link Supabase Project
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
        run: supabase link --project-ref ${{ secrets.SUPABASE_PROJECT_REF }}
        working-directory: deployments/supabase

      - name: üóÑÔ∏è Apply Supabase Migrations
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
        run: supabase db push
        working-directory: deployments/supabase

      - name: Build Docker Image
        shell: bash
        run: docker build --platform linux/amd64 --tag ${{ vars.REGION }}-docker.pkg.dev/${{ vars.PROJECT_ID }}/${{ vars.AR_REPO_NAME }}/swim-gen-backend:${{ github.sha }} .
        working-directory: backend
      - name: Push Docker Image to Registry
        shell: bash
        run: |
          gcloud --quiet auth configure-docker "${{ vars.REGION }}-docker.pkg.dev"
          docker push ${{ vars.REGION }}-docker.pkg.dev/${{ vars.PROJECT_ID }}/${{ vars.AR_REPO_NAME }}/swim-gen-backend:${{ github.sha }}

      - name: Tag Image as latest
        shell: bash
        run: |
          gcloud artifacts docker tags add \
          ${{ vars.REGION }}-docker.pkg.dev/${{ vars.PROJECT_ID }}/${{ vars.AR_REPO_NAME }}/swim-gen-backend:${{ github.sha }} \
          ${{ vars.REGION }}-docker.pkg.dev/${{ vars.PROJECT_ID }}/${{ vars.AR_REPO_NAME }}/swim-gen-backend:latest

      - name: Tag with main version
        if: inputs.version
        shell: bash
        run: |
          gcloud artifacts docker tags add \
          ${{ vars.REGION }}-docker.pkg.dev/${{ vars.PROJECT_ID }}/${{ vars.AR_REPO_NAME }}/swim-gen-backend:${{ github.sha }} \
          ${{ vars.REGION }}-docker.pkg.dev/${{ vars.PROJECT_ID }}/${{ vars.AR_REPO_NAME }}/swim-gen-backend:${{ inputs.version }}
