name: 🚦Validate Backend (Format, Lint, Test)

on:
  workflow_call:
      inputs:
        env:
          required: false
          type: string
          description: "Environment to setup for"
          default: dev
  pull_request:
    branches: [dev, main]
    paths:
      - "backend/**"
      - ".github/workflows/backend-build.yaml"
  workflow_dispatch:
    inputs:
      env:
        description: "Environment override (prod|dev)"
        required: false
        type: choice
        options:
          - dev
          - prod

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate:
    name: Validate backend for ${{ (github.event_name == 'workflow_call' || github.event_name == 'workflow_dispatch') && inputs.env || (github.ref_name == 'main' && 'prod' || 'dev') }}
    runs-on: ubuntu-latest
    environment: ${{ (github.event_name == 'workflow_call' || github.event_name == 'workflow_dispatch') && inputs.env || (github.ref_name == 'main' && 'prod' || 'dev') }}
    steps:
      - name: ⬇️ Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📦 Setup Workflow
        uses: ./.github/actions/setup
        with:
          wif_provider: ${{ vars.wif_provider }}
          wif_sa: ${{ vars.wif_sa }}
          env-file: backend/.env.development

      - name: 🐹 Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.25"

      - name: 🚦 Vet Code
        shell: bash
        run: "go vet backend/..."

      - name: 🚦 Format Code
        shell: bash
        run: "go fmt backend/..."

      - name: 🚦 Lint Code
        uses: golangci/golangci-lint-action@v6
        with:
          working-directory: backend

      - name: 🚦 Run Tests
        shell: bash
        run: |
          go install github.com/jstemmer/go-junit-report/v2@latest
          2>&1 go test -timeout 1m -v ./... | /go/bin/go-junit-report -set-exit-code -iocopy -out ${{ github.ref }}_test_log.xml
        working-directory: backend


