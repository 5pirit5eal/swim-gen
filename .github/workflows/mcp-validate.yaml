name: 🚦Validate MCP (Format, Lint, Test)

on:
  workflow_call:
    inputs:
      env:
        required: false
        type: string
        description: "Environment to setup for"
        default: dev
  pull_request:
    branches: [dev, main]
    paths:
      - "mcp-server/**"
      - ".github/workflows/mcp-validate.yaml"
  workflow_dispatch:
    inputs:
      env:
        description: "Environment override (prod|dev)"
        required: false
        type: choice
        options:
          - dev
          - prod

permissions:
  id-token: write
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate:
    name: Validate MCP for ${{ (github.event_name == 'workflow_call' || github.event_name == 'workflow_dispatch') && inputs.env || (github.ref_name == 'main' && 'prod' || 'dev') }}
    runs-on: ubuntu-latest
    environment: ${{ (github.event_name == 'workflow_call' || github.event_name == 'workflow_dispatch') && inputs.env || (github.ref_name == 'main' && 'prod' || 'dev') }}
    env:
      PROJECT_ID: ${{ vars.PROJECT_ID }}
      REGION: ${{ vars.REGION }}
    steps:
      - name: ⬇️ Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📦 Setup Workflow
        uses: ./.github/actions/setup
        with:
          WIF_PROVIDER: ${{ vars.WIF_PROVIDER }}
          WIF_SA: ${{ vars.WIF_SA }}
          env-file: mcp-server/.env.development

      - name: 🐍 Setup Python
        uses: actions/setup-python@v5
        with:
          python-version-file: ./mcp-server/.python-version

      - name: 📥 Install uv
        uses: astral-sh/setup-uv@v5

      - name: 📦 Install dependencies (uv sync)
        shell: bash
        run: uv sync --group dev
        working-directory: mcp-server

      - name: 🎨 Format check (ruff)
        shell: bash
        run: |
          uv run ruff format . --diff
          uv run ruff check --select I .
        working-directory: mcp-server

      - name: 🔄 Auto-commit formatting
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(fmt): apply ruff formatting"
          file_pattern: mcp-server/**

      - name: 🚦 Lint, Type Check, Security (mypy, bandit)
        shell: bash
        run: |
          mkdir -p .mypy_cache
          uv run mypy . --cache-dir .mypy_cache
          uv run bandit -c pyproject.toml -ll -x ./.venv/ -r .
        working-directory: mcp-server

      - name: 🧪 Run Unit Tests
        if: ${{ hashFiles('tests/unit_tests') != '' }}
        shell: bash
        run: uv run --group dev pytest tests/unit_tests/test_* --junitxml=unit_test_log.xml || true
        working-directory: mcp-server

      - name: 🧪 Run Integration Tests
        if: ${{ hashFiles('tests/integration_tests') != '' }}
        shell: bash
        run: v run --group dev pytest tests/integration_tests/test_* --junitxml=integration_test_log.xml || true
        working-directory: mcp-server

      - name: 🧪 Run System Tests
        if: ${{ hashFiles('tests/system_tests') != '' }}
        run: uv run --group dev pytest tests/system_tests/test_* --junitxml=system_test_log.xml || true
        working-directory: mcp-server

