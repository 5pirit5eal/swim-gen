name: 🚀 Build & Deploy (dev)

on:
  issue_comment:
    types: [created]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.issue.number || github.ref }}
  cancel-in-progress: true

permissions:
  id-token: write # This is required for requesting the JWT
  contents: write # This is required for actions/checkout
  issues: write # This is required for reacting to comments and posting comments
  pull-requests: write # This is required for reacting to comments and posting comments

jobs:
  get-deployment-data:
    name: 📦 Get deployment data
    if: github.event_name == 'workflow_dispatch' || (github.event.issue.pull_request && contains(github.event.comment.body, '.deploy dev'))
    runs-on: ubuntu-latest
    outputs:
      head_sha: ${{ steps.get-data.outputs.head_sha }}
      base_sha: ${{ steps.get-data.outputs.base_sha }}
      head_repo_full_name: ${{ steps.get-data.outputs.head_repo_full_name }}
    steps:
      - name: Get deployment data
        id: get-data
        uses: actions/github-script@v7
        with:
          script: |
            if (context.eventName === 'workflow_dispatch') {
              core.info('Workflow dispatched manually');
              core.setOutput('head_sha', context.sha);
              core.setOutput('base_sha', context.sha);
              core.setOutput('head_repo_full_name', context.repo.owner + '/' + context.repo.repo);
            } else {
              const request = {
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.issue.number,
              };
              core.info(`Getting PR #${request.pull_number} from ${request.owner}/${request.repo}`);
              try {
                const result = await github.rest.pulls.get(request);
                core.setOutput('head_sha', result.data.head.sha);
                core.setOutput('base_sha', result.data.base.sha);
                core.setOutput('head_repo_full_name', result.data.head.repo.full_name);
              } catch (err) {
                core.setFailed(`Request to get PR data failed with error ${err}`);
              }
            }

  opentofu-infra:
    name: 🪄 OpenTofu infra (dev)
    needs: get-deployment-data
    uses: ./.github/workflows/tf-plan-apply.yaml
    with:
      env: dev
      apply: true
      cwd: deployments/dev/0-infra
      checkout_repo: ${{ needs.get-deployment-data.outputs.head_repo_full_name }}
      checkout_ref: ${{ needs.get-deployment-data.outputs.head_sha }}
    secrets: inherit

  detect-changes:
    name: 🔎 Detect service changes
    needs: get-deployment-data
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
      bff: ${{ steps.filter.outputs.bff }}
      mcp: ${{ steps.filter.outputs.mcp }}
      supabase: ${{ steps.filter.outputs.supabase }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: ${{ needs.get-deployment-data.outputs.head_repo_full_name }}
          ref: ${{ needs.get-deployment-data.outputs.head_sha }}
          fetch-depth: 0
      - name: Fetch base branch
        if: github.event_name != 'workflow_dispatch'
        run: git fetch origin ${{ needs.get-deployment-data.outputs.base_sha }} --depth=1
      - id: filter
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "backend=true" >> $GITHUB_OUTPUT
            echo "frontend=true" >> $GITHUB_OUTPUT
            echo "bff=true" >> $GITHUB_OUTPUT
            echo "mcp=true" >> $GITHUB_OUTPUT
            echo "supabase=true" >> $GITHUB_OUTPUT
          else
            changed() { git diff --name-only ${{ needs.get-deployment-data.outputs.base_sha }} ${{ needs.get-deployment-data.outputs.head_sha }} | grep -E "^$1/" >/dev/null && echo true || echo false; }
            echo "backend=$(changed backend)" >> $GITHUB_OUTPUT
            echo "frontend=$(changed frontend)" >> $GITHUB_OUTPUT
            echo "bff=$(changed bff)" >> $GITHUB_OUTPUT
            echo "mcp=$(changed mcp-server)" >> $GITHUB_OUTPUT
            echo "supabase=$(changed deployments/supabase)" >> $GITHUB_OUTPUT
          fi

  build-backend:
    if: ${{ needs.detect-changes.outputs.backend == 'true' }}
    needs: [detect-changes, get-deployment-data]
    uses: ./.github/workflows/backend-build.yaml
    with:
      env: dev
      checkout_repo: ${{ needs.get-deployment-data.outputs.head_repo_full_name }}
      checkout_ref: ${{ needs.get-deployment-data.outputs.head_sha }}
    secrets: inherit

  build-frontend:
    if: ${{ needs.detect-changes.outputs.frontend == 'true' }}
    needs: [detect-changes, get-deployment-data]
    uses: ./.github/workflows/frontend-build.yaml
    with:
      env: dev
      checkout_repo: ${{ needs.get-deployment-data.outputs.head_repo_full_name }}
      checkout_ref: ${{ needs.get-deployment-data.outputs.head_sha }}
    secrets: inherit

  build-bff:
    if: ${{ needs.detect-changes.outputs.bff == 'true' }}
    needs: [detect-changes, get-deployment-data]
    uses: ./.github/workflows/bff-build.yaml
    with:
      env: dev
      checkout_repo: ${{ needs.get-deployment-data.outputs.head_repo_full_name }}
      checkout_ref: ${{ needs.get-deployment-data.outputs.head_sha }}
    secrets: inherit

  build-mcp:
    if: ${{ needs.detect-changes.outputs.mcp == 'true' }}
    needs: [detect-changes, get-deployment-data]
    uses: ./.github/workflows/mcp-build.yaml
    with:
      env: dev
      checkout_repo: ${{ needs.get-deployment-data.outputs.head_repo_full_name }}
      checkout_ref: ${{ needs.get-deployment-data.outputs.head_sha }}
    secrets: inherit

  deploy-supabase:
    if: ${{ needs.detect-changes.outputs.supabase == 'true' }}
    needs: [detect-changes, get-deployment-data]
    uses: ./.github/workflows/supabase-deploy.yaml
    with:
      env: dev
      checkout_repo: ${{ needs.get-deployment-data.outputs.head_repo_full_name }}
      checkout_ref: ${{ needs.get-deployment-data.outputs.head_sha }}
    secrets: inherit

  opentofu-services:
    name: 🪄 OpenTofu services (dev)
    needs:
      - get-deployment-data
      - opentofu-infra
      - build-backend
      - build-frontend
      - build-bff
      - build-mcp
      - deploy-supabase
    if: always() && !cancelled() && !contains(needs.*.result, 'failure')
    uses: ./.github/workflows/tf-plan-apply.yaml
    with:
      env: dev
      apply: true
      cwd: deployments/dev/1-services
      infra_outputs: ${{ needs.opentofu-infra.outputs.tf_outputs }}
      checkout_repo: ${{ needs.get-deployment-data.outputs.head_repo_full_name }}
      checkout_ref: ${{ needs.get-deployment-data.outputs.head_sha }}
    secrets: inherit

  react-to-comment:
    name: 👍 React to deploy comment
    if: github.event.issue.pull_request && contains(github.event.comment.body, '.deploy dev')
    runs-on: ubuntu-latest
    steps:
      - name: Add reaction to comment
        uses: actions/github-script@v8
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.reactions.createForIssueComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: context.payload.comment.id,
              content: '+1'
            });
      - name: Add comment with action link
        uses: actions/github-script@v8
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const runUrl = `${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.issue.number,
              body: `Deployment to dev started! 🚀 Check the progress here: [Action Run](${runUrl})`
            });

  comment-on-completion:
    name: 💬 Comment on deployment completion
    needs: opentofu-services
    if: always() && !cancelled() && !contains(needs.*.result, 'failure') && github.event_name != 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Comment on PR
        uses: actions/github-script@v8
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.issue.number,
              body: 'Deployment to dev completed successfully! 🚀'
            });
