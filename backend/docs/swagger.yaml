basePath: /
definitions:
  models.DonatePlanRequest:
    description: Request payload for donating a swim training plan to the system
    properties:
      description:
        example: A comprehensive training plan for improving freestyle technique
        type: string
      table:
        description: A structured training plan table containing exercise rows
        items:
          $ref: '#/definitions/models.Row'
        type: array
      title:
        example: Advanced Freestyle Training
        type: string
      user_id:
        example: user123
        type: string
    required:
    - table
    - user_id
    type: object
  models.GeneratedPromptRequest:
    properties:
      language:
        example: en
        type: string
    required:
    - language
    type: object
  models.GeneratedPromptResponse:
    properties:
      prompt:
        example: Generate a swim training plan for improving freestyle technique
        type: string
    type: object
  models.PlanToPDFRequest:
    description: Request payload for exporting a training plan to PDF format
    properties:
      description:
        example: A comprehensive training plan for improving freestyle technique
        type: string
      table:
        description: A structured training plan table containing exercise rows
        items:
          $ref: '#/definitions/models.Row'
        type: array
      title:
        example: Advanced Freestyle Training
        type: string
    required:
    - description
    - table
    - title
    type: object
  models.PlanToPDFResponse:
    description: Response containing the URI to the generated PDF file
    properties:
      uri:
        example: https://storage.googleapis.com/bucket/plans/plan_123.pdf
        type: string
    type: object
  models.QueryRequest:
    description: Request payload for querying swim training plans from the RAG system
    properties:
      content:
        description: Content describes what kind of training plan is needed
        example: I need a training plan for improving my freestyle technique
        type: string
      filter:
        additionalProperties: {}
        description: Filter allows filtering plans by metadata like difficulty or
          stroke type
        type: object
      method:
        description: Method can be either 'choose' (select existing plan) or 'generate'
          (create new plan)
        enum:
        - choose
        - generate
        example: generate
        type: string
    required:
    - content
    type: object
  models.RAGResponse:
    description: Response containing a generated or selected swim training plan
    properties:
      description:
        example: A comprehensive training plan for improving freestyle technique
        type: string
      table:
        description: A structured training plan table containing exercise rows
        items:
          $ref: '#/definitions/models.Row'
        type: array
      title:
        example: Advanced Freestyle Training
        type: string
    type: object
  models.Row:
    description: A single exercise entry with amount, distance, breaks, content, intensity
      and total volume
    properties:
      Amount:
        example: 4
        type: integer
      Break:
        example: "20"
        type: string
      Content:
        example: Freestyle swim
        type: string
      Distance:
        example: 100
        type: integer
      Intensity:
        example: Easy
        type: string
      Multiplier:
        example: x
        type: string
      Sum:
        example: 400
        type: integer
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
info:
  contact: {}
  description: A REST API for swim training plan management with RAG capabilities
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Swim RAG API
  version: "1.0"
paths:
  /add:
    post:
      consumes:
      - application/json
      description: Upload and store a new swim training plan in the RAG system
      parameters:
      - description: Training plan data
        in: body
        name: plan
        required: true
        schema:
          $ref: '#/definitions/models.DonatePlanRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Plan added successfully
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Add a new training plan
      tags:
      - plans
  /export-pdf:
    post:
      consumes:
      - application/json
      description: Generate and download a PDF version of a training plan
      parameters:
      - description: Training plan data to export
        in: body
        name: plan
        required: true
        schema:
          $ref: '#/definitions/models.PlanToPDFRequest'
      produces:
      - application/json
      responses:
        "200":
          description: PDF export response with URI
          schema:
            $ref: '#/definitions/models.PlanToPDFResponse'
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Export training plan to PDF
      tags:
      - export
  /generate-prompt:
    post:
      consumes:
      - application/json
      description: Generate a prompt for the LLM based on the provided language
      parameters:
      - description: Request to generate a prompt
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.GeneratedPromptRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Generated prompt response
          schema:
            $ref: '#/definitions/models.GeneratedPromptResponse'
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Generate a prompt for the LLM
      tags:
      - prompt
  /health:
    get:
      description: Returns the health status of the API
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Health check
      tags:
      - health
  /query:
    post:
      consumes:
      - application/json
      description: Query the RAG system for relevant training plans based on input
      parameters:
      - description: Query parameters
        in: body
        name: query
        required: true
        schema:
          $ref: '#/definitions/models.QueryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Query results
          schema:
            $ref: '#/definitions/models.RAGResponse'
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Query training plans
      tags:
      - query
  /scrape:
    get:
      description: Scrape and import training plans from external websites
      parameters:
      - description: URL to scrape training plans from
        in: query
        name: url
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: Scraping completed successfully
          schema:
            type: string
        "400":
          description: Bad request - Missing url parameter
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Scrape training plans from web
      tags:
      - scraping
swagger: "2.0"
